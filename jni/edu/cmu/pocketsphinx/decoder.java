/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.cmu.pocketsphinx;

public class decoder {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected decoder(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(decoder obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        PocketSphinxJNI.delete_decoder(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public float emiGetHypScore(decoder ps) {
    return PocketSphinxJNI.decoder_emiGetHypScore(swigCPtr, this, decoder.getCPtr(ps), ps);
  }

  public int emiGetUttno() {
    return PocketSphinxJNI.decoder_emiGetUttno(swigCPtr, this);
  }

  public float emiGetVadSNR() {
    return PocketSphinxJNI.decoder_emiGetVadSNR(swigCPtr, this);
  }

  public void emiSetYinSearchThreshold(float threshold) {
    PocketSphinxJNI.decoder_emiSetYinSearchThreshold(swigCPtr, this, threshold);
  }

  public void emiSetYinSearchRange(float range) {
    PocketSphinxJNI.decoder_emiSetYinSearchRange(swigCPtr, this, range);
  }

  public void emiSetYinSmoothWindow(int smooth_window) {
    PocketSphinxJNI.decoder_emiSetYinSmoothWindow(swigCPtr, this, smooth_window);
  }

  public void emiSetYinParametros(int post_speech_reset_yin, int yin_vad_stopspeech, int yin_min_pitch_threshold, int yin_max_pitch_threshold, float yin_prob_pitch_threshold, float yin_prob_pitch_threshold2, float yin_desv_pitch_threshold) {
    PocketSphinxJNI.decoder_emiSetYinParametros(swigCPtr, this, post_speech_reset_yin, yin_vad_stopspeech, yin_min_pitch_threshold, yin_max_pitch_threshold, yin_prob_pitch_threshold, yin_prob_pitch_threshold2, yin_desv_pitch_threshold);
  }

  public void emiSetVadThreshold(float threshold) {
    PocketSphinxJNI.decoder_emiSetVadThreshold(swigCPtr, this, threshold);
  }

  public void emiSetVadMaxThreshold(float threshold) {
    PocketSphinxJNI.decoder_emiSetVadMaxThreshold(swigCPtr, this, threshold);
  }

  public void emiSetVadMinThreshold(float threshold) {
    PocketSphinxJNI.decoder_emiSetVadMinThreshold(swigCPtr, this, threshold);
  }

  public float emiGetVadThreshold() {
    return PocketSphinxJNI.decoder_emiGetVadThreshold(swigCPtr, this);
  }

  public void emiSetVadLocked(boolean locked) {
    PocketSphinxJNI.decoder_emiSetVadLocked(swigCPtr, this, locked);
  }

  public int emiGetVadLocked() {
    return PocketSphinxJNI.decoder_emiGetVadLocked(swigCPtr, this);
  }

  public void emiInicializaAverageSNR(int numsnr) {
    PocketSphinxJNI.decoder_emiInicializaAverageSNR(swigCPtr, this, numsnr);
  }

  public float emiGetVadAverageSNR() {
    return PocketSphinxJNI.decoder_emiGetVadAverageSNR(swigCPtr, this);
  }

  public float emiGetVadAverageRMSDB() {
    return PocketSphinxJNI.decoder_emiGetVadAverageRMSDB(swigCPtr, this);
  }

  public float emiGetVadAverageDBSNR() {
    return PocketSphinxJNI.decoder_emiGetVadAverageDBSNR(swigCPtr, this);
  }

  public float emiGetVadDBThreshold() {
    return PocketSphinxJNI.decoder_emiGetVadDBThreshold(swigCPtr, this);
  }

  public float emiGetVadDBSNR() {
    return PocketSphinxJNI.decoder_emiGetVadDBSNR(swigCPtr, this);
  }

  public void emiSetVadDBThreshold(float dbthreshold) {
    PocketSphinxJNI.decoder_emiSetVadDBThreshold(swigCPtr, this, dbthreshold);
  }

  public void emiCambiaConfiguracionRawlog() {
    PocketSphinxJNI.decoder_emiCambiaConfiguracionRawlog(swigCPtr, this);
  }

  public int emiGetNumsPitchUtt() {
    return PocketSphinxJNI.decoder_emiGetNumsPitchUtt(swigCPtr, this);
  }

  public float emiGetCMN() {
    return PocketSphinxJNI.decoder_emiGetCMN(swigCPtr, this);
  }

  public float emiGetProbability(int prob) {
    return PocketSphinxJNI.decoder_emiGetProbability(swigCPtr, this, prob);
  }

  public void emiUsaDeteccionPitch(boolean usaPitch) {
    PocketSphinxJNI.decoder_emiUsaDeteccionPitch(swigCPtr, this, usaPitch);
  }

  public boolean emiGetVadCalculoAutomaticoThreshold() {
    return PocketSphinxJNI.decoder_emiGetVadCalculoAutomaticoThreshold(swigCPtr, this);
  }

  public void emiSetVadCalculoAutomaticoThreshold(boolean calculoAutomatico) {
    PocketSphinxJNI.decoder_emiSetVadCalculoAutomaticoThreshold(swigCPtr, this, calculoAutomatico);
  }

  public decoder() {
    this(PocketSphinxJNI.new_decoder__SWIG_0(), true);
  }

  public decoder(config config) {
    this(PocketSphinxJNI.new_decoder__SWIG_1(config.getCPtr(config), config), true);
  }

  public void reinit(config config) {
    PocketSphinxJNI.decoder_reinit(swigCPtr, this, config.getCPtr(config), config);
  }

  public void loadDict(String fdict, String ffilter, String format) {
    PocketSphinxJNI.decoder_loadDict(swigCPtr, this, fdict, ffilter, format);
  }

  public void saveDict(String dictfile, String format) {
    PocketSphinxJNI.decoder_saveDict(swigCPtr, this, dictfile, format);
  }

  public void addWord(String word, String phones, int update) {
    PocketSphinxJNI.decoder_addWord(swigCPtr, this, word, phones, update);
  }

  public String lookupWord(String word) {
    return PocketSphinxJNI.decoder_lookupWord(swigCPtr, this, word);
  }

  public lattice getLattice() {
    long cPtr = PocketSphinxJNI.decoder_getLattice(swigCPtr, this);
    return (cPtr == 0) ? null : new lattice(cPtr, false);
  }

  public config getConfig() {
    long cPtr = PocketSphinxJNI.decoder_getConfig(swigCPtr, this);
    return (cPtr == 0) ? null : new config(cPtr, true);
  }

  public static config defaultConfig() {
    long cPtr = PocketSphinxJNI.decoder_defaultConfig();
    return (cPtr == 0) ? null : new config(cPtr, true);
  }

  public static config fileConfig(String path) {
    long cPtr = PocketSphinxJNI.decoder_fileConfig(path);
    return (cPtr == 0) ? null : new config(cPtr, true);
  }

  public void startStream() {
    PocketSphinxJNI.decoder_startStream(swigCPtr, this);
  }

  public void startUtt() {
    PocketSphinxJNI.decoder_startUtt(swigCPtr, this);
  }

  public void endUtt() {
    PocketSphinxJNI.decoder_endUtt(swigCPtr, this);
  }

  public int processRaw(short[] SDATA, long NSAMP, boolean no_search, boolean full_utt) {
    return PocketSphinxJNI.decoder_processRaw(swigCPtr, this, SDATA, NSAMP, no_search, full_utt);
  }

  public void setRawdataSize(long size) {
    PocketSphinxJNI.decoder_setRawdataSize(swigCPtr, this, size);
  }

  public short[] getRawdata() {
  return PocketSphinxJNI.decoder_getRawdata(swigCPtr, this);
}

  public hypothesis hyp() {
    long cPtr = PocketSphinxJNI.decoder_hyp(swigCPtr, this);
    return (cPtr == 0) ? null : new hypothesis(cPtr, true);
  }

  public frontEnd getFe() {
    long cPtr = PocketSphinxJNI.decoder_getFe(swigCPtr, this);
    return (cPtr == 0) ? null : new frontEnd(cPtr, false);
  }

  public feature getFeat() {
    long cPtr = PocketSphinxJNI.decoder_getFeat(swigCPtr, this);
    return (cPtr == 0) ? null : new feature(cPtr, false);
  }

  public boolean getInSpeech() {
    return PocketSphinxJNI.decoder_getInSpeech(swigCPtr, this);
  }

  public fsgModel getFsg(String name) {
    long cPtr = PocketSphinxJNI.decoder_getFsg(swigCPtr, this, name);
    return (cPtr == 0) ? null : new fsgModel(cPtr, false);
  }

  public void setFsg(String name, fsgModel fsg) {
    PocketSphinxJNI.decoder_setFsg(swigCPtr, this, name, fsgModel.getCPtr(fsg), fsg);
  }

  public void setJsgfFile(String name, String path) {
    PocketSphinxJNI.decoder_setJsgfFile(swigCPtr, this, name, path);
  }

  public void setJsgfString(String name, String jsgf_string) {
    PocketSphinxJNI.decoder_setJsgfString(swigCPtr, this, name, jsgf_string);
  }

  public String getKws(String name) {
    return PocketSphinxJNI.decoder_getKws(swigCPtr, this, name);
  }

  public void setKws(String name, String keyfile) {
    PocketSphinxJNI.decoder_setKws(swigCPtr, this, name, keyfile);
  }

  public void setKeyphrase(String name, String keyphrase) {
    PocketSphinxJNI.decoder_setKeyphrase(swigCPtr, this, name, keyphrase);
  }

  public void setAllphoneFile(String name, String lmfile) {
    PocketSphinxJNI.decoder_setAllphoneFile(swigCPtr, this, name, lmfile);
  }

  public nGramModel getLm(String name) {
    long cPtr = PocketSphinxJNI.decoder_getLm(swigCPtr, this, name);
    return (cPtr == 0) ? null : new nGramModel(cPtr, true);
  }

  public void setLm(String name, nGramModel lm) {
    PocketSphinxJNI.decoder_setLm(swigCPtr, this, name, nGramModel.getCPtr(lm), lm);
  }

  public void setLmFile(String name, String path) {
    PocketSphinxJNI.decoder_setLmFile(swigCPtr, this, name, path);
  }

  public logMath getLogmath() {
    long cPtr = PocketSphinxJNI.decoder_getLogmath(swigCPtr, this);
    return (cPtr == 0) ? null : new logMath(cPtr, true);
  }

  public void setSearch(String search_name) {
    PocketSphinxJNI.decoder_setSearch(swigCPtr, this, search_name);
  }

  public void unsetSearch(String search_name) {
    PocketSphinxJNI.decoder_unsetSearch(swigCPtr, this, search_name);
  }

  public String getSearch() {
    return PocketSphinxJNI.decoder_getSearch(swigCPtr, this);
  }

  public int nFrames() {
    return PocketSphinxJNI.decoder_nFrames(swigCPtr, this);
  }

  public segmentList seg() {
    long cPtr = PocketSphinxJNI.decoder_seg(swigCPtr, this);
    return (cPtr == 0) ? null : new segmentList(cPtr, false);
  }

  public nBestList nbest() {
    long cPtr = PocketSphinxJNI.decoder_nbest(swigCPtr, this);
    return (cPtr == 0) ? null : new nBestList(cPtr, false);
  }

}
